
R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin10.8.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "CBMRtools"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> base::assign(".ExTimings", "CBMRtools-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('CBMRtools')
Loading required package: ggplot2
Loading required package: ggdendro
Warning: package ‘ggdendro’ was built under R version 3.1.1
Loading required package: cba
Loading required package: grid
Loading required package: proxy
Warning: package ‘proxy’ was built under R version 3.1.1

Attaching package: ‘proxy’

The following objects are masked from ‘package:stats’:

    as.dist, dist

Loading required package: Biobase
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following object is masked from ‘package:stats’:

    xtabs

The following objects are masked from ‘package:base’:

    Filter, Find, Map, Position, Reduce, anyDuplicated, append,
    as.data.frame, as.vector, cbind, colnames, do.call, duplicated,
    eval, evalq, get, intersect, is.unsorted, lapply, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, rank, rbind,
    rep.int, rownames, sapply, setdiff, sort, table, tapply, union,
    unique, unlist

Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: reshape2
Loading required package: gridExtra
Loading required package: gtable
Loading required package: RColorBrewer
Loading required package: scales
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("heatmap.ggplot2")
> ### * heatmap.ggplot2
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: heatmap.ggplot2
> ### Title: heatmap.ggplot2
> ### Aliases: heatmap.ggplot2
> 
> ### ** Examples
> 
> #Use example data #2, for data set information: ?eSet2
> data(eSet2)
> 
> #Most basic plot
> p1<-heatmap.ggplot2(eSet2, col.clust=FALSE, row.clust=FALSE)
> 
> #More advanced plot
> p2<-heatmap.ggplot2(eSet=eSet2, col.clust=TRUE, row.clust=TRUE,
+ col.lab=c("HER2_status", "ER_status", "PR_status", "TN_status"), row.lab="",
+ heatmap.y.text=FALSE, heatmap.x.text=FALSE,
+ heatmap.colorlegend.name="RNASeq_expression",
+ title.text="TCGA BRCA log2 RNA-seq expression, z-score row normalized",
+ col.legend.name=c("HER2_status", "ER_status", "PR_status", "TN_status"),
+ row.legend.name="",
+ row.scaling="z-score.capped",
+ z.norm=FALSE,
+ cuttree.col=4, cuttree.row=6,
+ verbose=FALSE, show=FALSE)
> 
> #Display and saving options
> print(p2) #to display in viewer if working in RStudio
> ggsave(p2, file="example_plot.pdf")
Saving 7 x 7 in image
> ggsave(p2, file="example_plot.jpg")
Saving 7 x 7 in image
Fontconfig error: Cannot load default config file
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("heatmap.ggplot2", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("variation.filter")
> ### * variation.filter
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: variation.filter
> ### Title: variation.filter
> ### Aliases: variation.filter
> 
> ### ** Examples
> 
> # select the top 100 genes by median absolute deviation (mad) and also generate plot
> 
> #Use example data #2, for data set information: ?eSet2
> data(eSet2)
> 
> png('mydata.filtered.png')
> variation.filter(eset2,score='mad',ngenes=100,do.plot=TRUE)
Error in nrow(dat) : object 'eset2' not found
Calls: variation.filter -> nrow
Execution halted
