% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/geneSetProjection.R
\name{geneSetProjection}
\alias{geneSetProjection}
\title{geneSetProjection}
\usage{
geneSetProjection(dat, pairing, GS, method = c("ks", "logistic", "median",
  "mean"), collapse = T, weighted = T, absolute = F, min.gset = 5,
  verbose = T)
}
\arguments{
\item{dat}{ExpressionSet data object ( require(biobase) )}

\item{pairing}{list with pairing between treatment and control (see format below)}

\item{method}{one of {"ks","logistic","median","mean"} (only ks implemented so far)}

\item{collapse}{collapse multiple replicates into a single output vector (TRUE)}

\item{weighted}{gsea-like weighting of KS score (TRUE)}

\item{absolute}{use absolute values when calculating the KS score ignoring up and down (FALSE)}

\item{verbose}{verbosity on/off (TRUE)}

\item{gsets}{GeneSet data object (see GeneSet.R)}
}
\description{
\code{geneSetProjection} map a gene-level dataset to a
geneset-level dataset based on control-treatment pairing (i.e., the
ks score is done with respect to the 'control vs. treatment'
phenotype).  This function is ideal for 'time-series' data of
response to treatment, where for each time point there are several
replicates for both the control and the treated.
}
\examples{
# comment

# the very basic steps are:

# 1) load the data (expression and genesets)
# 2) rename the dataset by replacing probesetIDs by gene symbols ==> DB
# 3) create the list of lists pairing ==> PAIRS
# 4) run geneSetProjection(dat=DB,pairing=PAIRS,gset.db=GSET, ...)

## 1) LOAD the data
##
data(gspData)
if (is.null(gsp.eSet)) stop("is.null(gsp.eSet)")
if (is.null(gsp.GeneSet)) stop("is.null(gsp.GeneSet)")

## 2) RENAME the dataset rows (w/ gene symbols)
##
DAT1 <- gsp.eSet[pData(featureData(gsp.eSet))[,"symbol"]!="",]
featureNames(DAT1) <- toupper(pData(featureData(DAT1))[,"symbol"])

## 3) CREATE the list of lists pairing
##
PAIRS <- list(OSCC=list(control=sampleNames(DAT1)[pData(DAT1)[,"tissue_type"]=="AN"],
                        treatment=sampleNames(DAT1)[pData(DAT1)[,"tissue_type"]!="AN"]))

## 4) RUN geneSetProjection ..
##
GSPdir <- geneSetProjection(dat=DAT1,
                            pairing=PAIRS,
                            GS=gsp.GeneSet,
                            collapse=FALSE,
                            weighted=FALSE,
                            absolute=FALSE, # keep the directionality of the enrichment scores
                            min.gset=5,
                            verbose=TRUE)

gradeID <- 'my_grade'
stageID <- 'my_stage'
p2 <- heatmap.ggplot2(eSet=GSPdir,col.clust=TRUE,row.clust=TRUE,
                      col.lab=c(gradeID,stageID),row.lab="",
                      heatmap.y.text=FALSE, heatmap.x.text=FALSE,
                      heatmap.colorlegend.name="RNASeq_expression",
                      title.text="TCGA BRCA log2 gene set projection",
                      col.legend.name=c(gradeID,stageID), row.legend.name="",
                      row.scaling="none",z.norm=FALSE,
                      cuttree.col=0, cuttree.row=0,
                      verbose=FALSE, show=TRUE)
}

